"use strict";

exports.Tower = class {
    constructor(lengthSide, level) {
        this.lengthSide = lengthSide;
        this.layer = level;
        this.actualLayer = level;
        this.layerLength = lengthSide*lengthSide*6;
        this.actuLayerLength = this.layerLength;
        //Initialize a tower
        this.towerTiles = {};
            
        for(var i = 0; i<this.layerLength; i++)
            this.towerTiles[i] = level;
    }

    decrement(id) {

        if (this.towerTiles[id] == this.actualLayer) { //Decrement the current layer of the tile if it's at the same level as the actual layer.
            this.actuLayerLength--; //The actual layer loose a tile.
            this.towerTiles[id] = this.actualLayer - 1;

            if (this.actuLayerLength == 0) { //When the layer no longer has tile it's going to the below layer.
                this.actuLayerLength = this.layerLength;
                this.actualLayer--;

                if (this.actualLayer == 0) { //When there is no more layer the player wins and the kernel is shown.
                    return 'WIN';
                }
            }
            return 'BROKEN';
        }
        return null;
    }
};
